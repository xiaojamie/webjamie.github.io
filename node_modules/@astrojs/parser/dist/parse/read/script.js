var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var script_exports = {};
__export(script_exports, {
  default: () => read_script
});
const script_closing_tag = "<\/script>";
function get_context(parser, attributes, start) {
  const context = attributes.find((attribute) => attribute.name === "astro");
  if (!context)
    return "runtime";
  if (context.value === true)
    return "setup";
  if (context.value.length !== 1 || context.value[0].type !== "Text") {
    parser.error({
      code: "invalid-script",
      message: "astro attribute must be static"
    }, start);
  }
  const value = context.value[0].data;
  if (value !== "setup") {
    parser.error({
      code: "invalid-script",
      message: 'If the "astro" attribute has a value, its value must be "setup"'
    }, context.start);
  }
  return value;
}
function read_script(parser, start, attributes) {
  const script_start = parser.index;
  const script_end = parser.template.indexOf(script_closing_tag, script_start);
  if (script_end === -1) {
    parser.error({
      code: "unclosed-script",
      message: "<script> must have a closing tag"
    });
  }
  const source = parser.template.slice(0, script_start).replace(/[^\n]/g, " ") + parser.template.slice(script_start, script_end);
  parser.index = script_end + script_closing_tag.length;
  return {
    type: "Script",
    start,
    end: parser.index,
    context: get_context(parser, attributes, start),
    content: source
  };
}
module.exports = __toCommonJS(script_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL3BhcnNlL3JlYWQvc2NyaXB0LnRzIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBTUEsTUFBTSxxQkFBcUI7QUFFM0IscUJBQXFCLFFBQWdCLFlBQW1CLE9BQW9DO0FBQzNGLFFBQU0sVUFBVSxXQUFXLEtBQUssQ0FBQyxjQUFjLFVBQVUsU0FBUyxPQUFPO0FBQ3pFLE1BQUksQ0FBQztBQUFTLFdBQU87QUFDckIsTUFBSSxRQUFRLFVBQVU7QUFBTSxXQUFPO0FBRW5DLE1BQUksUUFBUSxNQUFNLFdBQVcsS0FBSyxRQUFRLE1BQU0sR0FBRyxTQUFTLFFBQVE7QUFDbkUsV0FBTyxNQUNOO0FBQUEsTUFDQyxNQUFNO0FBQUEsTUFDTixTQUFTO0FBQUEsSUFDVixHQUNBLEtBQ0Q7QUFBQSxFQUNEO0FBRUEsUUFBTSxRQUFRLFFBQVEsTUFBTSxHQUFHO0FBRS9CLE1BQUksVUFBVSxTQUFTO0FBQ3RCLFdBQU8sTUFDTjtBQUFBLE1BQ0MsTUFBTTtBQUFBLE1BQ04sU0FBUztBQUFBLElBQ1YsR0FDQSxRQUFRLEtBQ1Q7QUFBQSxFQUNEO0FBRUEsU0FBTztBQUNSO0FBRWUscUJBQXFCLFFBQWdCLE9BQWUsWUFBNEI7QUFDOUYsUUFBTSxlQUFlLE9BQU87QUFDNUIsUUFBTSxhQUFhLE9BQU8sU0FBUyxRQUFRLG9CQUFvQixZQUFZO0FBRTNFLE1BQUksZUFBZSxJQUFJO0FBQ3RCLFdBQU8sTUFBTTtBQUFBLE1BQ1osTUFBTTtBQUFBLE1BQ04sU0FBUztBQUFBLElBQ1YsQ0FBQztBQUFBLEVBQ0Y7QUFFQSxRQUFNLFNBQVMsT0FBTyxTQUFTLE1BQU0sR0FBRyxZQUFZLEVBQUUsUUFBUSxVQUFVLEdBQUcsSUFBSSxPQUFPLFNBQVMsTUFBTSxjQUFjLFVBQVU7QUFDN0gsU0FBTyxRQUFRLGFBQWEsbUJBQW1CO0FBRS9DLFNBQU87QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOO0FBQUEsSUFDQSxLQUFLLE9BQU87QUFBQSxJQUNaLFNBQVMsWUFBWSxRQUFRLFlBQVksS0FBSztBQUFBLElBQzlDLFNBQVM7QUFBQSxFQUNWO0FBQ0Q7IiwKICAibmFtZXMiOiBbXQp9Cg==
