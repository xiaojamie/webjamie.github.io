var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var context_exports = {};
__export(context_exports, {
  default: () => read_context
});
var import_acorn = require("acorn");
var import_full_char_code_at = __toESM(require("../../utils/full_char_code_at.js"));
var import_bracket = require("../utils/bracket.js");
var import_expression = require("./expression.js");
function read_context(parser) {
  const start = parser.index;
  let i = parser.index;
  const code = (0, import_full_char_code_at.default)(parser.template, i);
  if ((0, import_acorn.isIdentifierStart)(code, true)) {
    return {
      type: "Identifier",
      name: parser.read_identifier(),
      start,
      end: parser.index
    };
  }
  if (!(0, import_bracket.is_bracket_open)(code)) {
    parser.error({
      code: "unexpected-token",
      message: "Expected identifier or destructure pattern"
    });
  }
  const bracket_stack = [code];
  i += code <= 65535 ? 1 : 2;
  while (i < parser.template.length) {
    const code2 = (0, import_full_char_code_at.default)(parser.template, i);
    if ((0, import_bracket.is_bracket_open)(code2)) {
      bracket_stack.push(code2);
    } else if ((0, import_bracket.is_bracket_close)(code2)) {
      if (!(0, import_bracket.is_bracket_pair)(bracket_stack[bracket_stack.length - 1], code2)) {
        parser.error({
          code: "unexpected-token",
          message: `Expected ${String.fromCharCode((0, import_bracket.get_bracket_close)(bracket_stack[bracket_stack.length - 1]))}`
        });
      }
      bracket_stack.pop();
      if (bracket_stack.length === 0) {
        i += code2 <= 65535 ? 1 : 2;
        break;
      }
    }
    i += code2 <= 65535 ? 1 : 2;
  }
  parser.index = i;
  const pattern_string = parser.template.slice(start, i);
  try {
    let space_with_newline = parser.template.slice(0, start).replace(/[^\n]/g, " ");
    const first_space = space_with_newline.indexOf(" ");
    space_with_newline = space_with_newline.slice(0, first_space) + space_with_newline.slice(first_space + 1);
    return (0, import_expression.parse_expression_at)(`${space_with_newline}(${pattern_string} = 1)`, start - 1).left;
  } catch (error) {
    parser.acorn_error(error);
  }
}
module.exports = __toCommonJS(context_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL3BhcnNlL3JlYWQvY29udGV4dC50cyJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0EsbUJBQWtDO0FBQ2xDLCtCQUE4QjtBQUM5QixxQkFBc0Y7QUFDdEYsd0JBQW9DO0FBR3JCLHNCQUFzQixRQUEwRDtBQUM5RixRQUFNLFFBQVEsT0FBTztBQUNyQixNQUFJLElBQUksT0FBTztBQUVmLFFBQU0sT0FBTyxzQ0FBa0IsT0FBTyxVQUFVLENBQUM7QUFDakQsTUFBSSxvQ0FBa0IsTUFBTSxJQUFJLEdBQUc7QUFDbEMsV0FBTztBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sTUFBTSxPQUFPLGdCQUFnQjtBQUFBLE1BQzdCO0FBQUEsTUFDQSxLQUFLLE9BQU87QUFBQSxJQUNiO0FBQUEsRUFDRDtBQUVBLE1BQUksQ0FBQyxvQ0FBZ0IsSUFBSSxHQUFHO0FBQzNCLFdBQU8sTUFBTTtBQUFBLE1BQ1osTUFBTTtBQUFBLE1BQ04sU0FBUztBQUFBLElBQ1YsQ0FBQztBQUFBLEVBQ0Y7QUFFQSxRQUFNLGdCQUFnQixDQUFDLElBQUk7QUFDM0IsT0FBSyxRQUFRLFFBQVMsSUFBSTtBQUUxQixTQUFPLElBQUksT0FBTyxTQUFTLFFBQVE7QUFDbEMsVUFBTSxRQUFPLHNDQUFrQixPQUFPLFVBQVUsQ0FBQztBQUNqRCxRQUFJLG9DQUFnQixLQUFJLEdBQUc7QUFDMUIsb0JBQWMsS0FBSyxLQUFJO0FBQUEsSUFDeEIsV0FBVyxxQ0FBaUIsS0FBSSxHQUFHO0FBQ2xDLFVBQUksQ0FBQyxvQ0FBZ0IsY0FBYyxjQUFjLFNBQVMsSUFBSSxLQUFJLEdBQUc7QUFDcEUsZUFBTyxNQUFNO0FBQUEsVUFDWixNQUFNO0FBQUEsVUFDTixTQUFTLFlBQVksT0FBTyxhQUFhLHNDQUFrQixjQUFjLGNBQWMsU0FBUyxFQUFFLENBQUM7QUFBQSxRQUNwRyxDQUFDO0FBQUEsTUFDRjtBQUNBLG9CQUFjLElBQUk7QUFDbEIsVUFBSSxjQUFjLFdBQVcsR0FBRztBQUMvQixhQUFLLFNBQVEsUUFBUyxJQUFJO0FBQzFCO0FBQUEsTUFDRDtBQUFBLElBQ0Q7QUFDQSxTQUFLLFNBQVEsUUFBUyxJQUFJO0FBQUEsRUFDM0I7QUFFQSxTQUFPLFFBQVE7QUFFZixRQUFNLGlCQUFpQixPQUFPLFNBQVMsTUFBTSxPQUFPLENBQUM7QUFDckQsTUFBSTtBQU9ILFFBQUkscUJBQXFCLE9BQU8sU0FBUyxNQUFNLEdBQUcsS0FBSyxFQUFFLFFBQVEsVUFBVSxHQUFHO0FBQzlFLFVBQU0sY0FBYyxtQkFBbUIsUUFBUSxHQUFHO0FBQ2xELHlCQUFxQixtQkFBbUIsTUFBTSxHQUFHLFdBQVcsSUFBSSxtQkFBbUIsTUFBTSxjQUFjLENBQUM7QUFFeEcsV0FBUSwyQ0FBb0IsR0FBRyxzQkFBc0IsdUJBQXVCLFFBQVEsQ0FBQyxFQUFVO0FBQUEsRUFDaEcsU0FBUyxPQUFQO0FBQ0QsV0FBTyxZQUFZLEtBQUs7QUFBQSxFQUN6QjtBQUNEOyIsCiAgIm5hbWVzIjogW10KfQo=
