var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var text_exports = {};
__export(text_exports, {
  default: () => text
});
var import_html = require("../utils/html.js");
function text(parser) {
  const start = parser.index;
  let data = "";
  const shouldContinue = () => {
    if (parser.current().name === "code") {
      return !parser.match("<") && !parser.match("{");
    }
    return !parser.match("<") && !parser.match("{") && !parser.match("`");
  };
  while (parser.index < parser.template.length && shouldContinue()) {
    data += parser.template[parser.index++];
  }
  const node = {
    start,
    end: parser.index,
    type: "Text",
    raw: data,
    data: (0, import_html.decode_character_references)(data)
  };
  parser.current().children.push(node);
}
module.exports = __toCommonJS(text_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL3BhcnNlL3N0YXRlL3RleHQudHMiXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQSxrQkFBNEM7QUFHN0IsY0FBYyxRQUFnQjtBQUM1QyxRQUFNLFFBQVEsT0FBTztBQUVyQixNQUFJLE9BQU87QUFFWCxRQUFNLGlCQUFpQixNQUFNO0FBRTVCLFFBQUksT0FBTyxRQUFRLEVBQUUsU0FBUyxRQUFRO0FBQ3JDLGFBQU8sQ0FBQyxPQUFPLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxNQUFNLEdBQUc7QUFBQSxJQUMvQztBQUNBLFdBQU8sQ0FBQyxPQUFPLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxNQUFNLEdBQUcsS0FBSyxDQUFDLE9BQU8sTUFBTSxHQUFHO0FBQUEsRUFDckU7QUFFQSxTQUFPLE9BQU8sUUFBUSxPQUFPLFNBQVMsVUFBVSxlQUFlLEdBQUc7QUFDakUsWUFBUSxPQUFPLFNBQVMsT0FBTztBQUFBLEVBQ2hDO0FBRUEsUUFBTSxPQUFPO0FBQUEsSUFDWjtBQUFBLElBQ0EsS0FBSyxPQUFPO0FBQUEsSUFDWixNQUFNO0FBQUEsSUFDTixLQUFLO0FBQUEsSUFDTCxNQUFNLDZDQUE0QixJQUFJO0FBQUEsRUFDdkM7QUFFQSxTQUFPLFFBQVEsRUFBRSxTQUFTLEtBQUssSUFBSTtBQUNwQzsiLAogICJuYW1lcyI6IFtdCn0K
